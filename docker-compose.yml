version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: econet-api
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-3000}
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-econet_db}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
    depends_on:
      - postgres
    networks:
      - econet-network
    restart: unless-stopped
    volumes:
      - ./.env:/app/.env:ro
  
  postgres:
    image: postgres:14
    container_name: econet-postgres
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME:-econet_db}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - econet-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_NAME:-econet_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  econet-network:
    driver: bridge

volumes:
  postgres_data:
    name: econet-postgres-data